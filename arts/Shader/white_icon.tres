[gd_resource type="VisualShader" load_steps=3 format=2]

[sub_resource type="VisualShaderNodeColorConstant" id=1]

[sub_resource type="VisualShaderNodeTexture" id=2]
source = 2

[resource]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Color:3
	vec3 n_out3p0 = vec3(1.000000, 1.000000, 1.000000);
	float n_out3p1 = 1.000000;

// Texture:5
	vec3 n_out5p0;
	float n_out5p1;
	{
		vec4 _tex_read = texture(TEXTURE , UV.xy);
		n_out5p0 = _tex_read.rgb;
		n_out5p1 = _tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out3p0;
	COLOR.a = n_out5p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -377, 127 )
mode = 1
flags/light_only = false
nodes/fragment/3/node = SubResource( 1 )
nodes/fragment/3/position = Vector2( 160, 140 )
nodes/fragment/5/node = SubResource( 2 )
nodes/fragment/5/position = Vector2( 100, 240 )
nodes/fragment/connections = PoolIntArray( 5, 1, 0, 1, 3, 0, 0, 0 )
